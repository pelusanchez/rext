var RextEditor;(()=>{"use strict";var t={554:(t,i,e)=>{e.d(i,{Z:()=>r});const r="/** * David Iglesias. All rights reserved */\nprecision mediump float;\nuniform sampler2D u_image;\nuniform vec2 u_textureSize;\nuniform float u_kernel[25];\nuniform float u_kernelWeight;\nuniform sampler2D u_lut;\nuniform float u_saturation;\nuniform float u_brightness;\nuniform float u_exposure;\nuniform float u_contrast;\nuniform float u_dehaze;\nuniform float u_atmosferic_light;\nuniform float u_masking;\nuniform vec3 u_temptint[3]; // RGB temptint, RGB lightFill, RGB darkFill\nuniform float u_bAndW;\nuniform float u_hdr;\nvarying vec2 v_texCoord;\nvoid main() {\n  \n\tvec2 pixel_size = vec2(1.0, 1.0) / u_textureSize;\n  \n\tvec3 center = texture2D(u_image, v_texCoord).rgb;\n\n  /* 5x5 kernel filter */\n  vec4 colorSum = texture2D(u_image, v_texCoord + pixel_size * vec2(-2, -2)) * u_kernel[0]\n\t\t + texture2D(u_image, v_texCoord + pixel_size * vec2(-1, -2)) * u_kernel[1]\n\t\t + texture2D(u_image, v_texCoord + pixel_size * vec2(0, -2)) * u_kernel[2]\n\t\t + texture2D(u_image, v_texCoord + pixel_size * vec2(1, -2)) * u_kernel[3]\n\t\t + texture2D(u_image, v_texCoord + pixel_size * vec2(2, -2)) * u_kernel[4]\n\n\t\t + texture2D(u_image, v_texCoord + pixel_size * vec2(-2, -1)) * u_kernel[5]\n\t\t + texture2D(u_image, v_texCoord + pixel_size * vec2(-1, -1)) * u_kernel[6]\n\t\t + texture2D(u_image, v_texCoord + pixel_size * vec2(0, -1)) * u_kernel[7]\n\t\t + texture2D(u_image, v_texCoord + pixel_size * vec2(1, -1)) * u_kernel[8]\n\t\t + texture2D(u_image, v_texCoord + pixel_size * vec2(2, -1)) * u_kernel[9]\n\n\t\t + texture2D(u_image, v_texCoord + pixel_size * vec2(-2, 0)) * u_kernel[10]\n\t\t + texture2D(u_image, v_texCoord + pixel_size * vec2(-1, 0)) * u_kernel[11]\n\t\t + texture2D(u_image, v_texCoord + pixel_size * vec2(0, 0)) * u_kernel[12]\n\t\t + texture2D(u_image, v_texCoord + pixel_size * vec2(1, 0)) * u_kernel[13]\n\t\t + texture2D(u_image, v_texCoord + pixel_size * vec2(2, 0)) * u_kernel[14]\n\n\t\t + texture2D(u_image, v_texCoord + pixel_size * vec2(-2, 1)) * u_kernel[15]\n\t\t + texture2D(u_image, v_texCoord + pixel_size * vec2(-1, 1)) * u_kernel[16]\n\t\t + texture2D(u_image, v_texCoord + pixel_size * vec2(0, 1)) * u_kernel[17]\n\t\t + texture2D(u_image, v_texCoord + pixel_size * vec2(1, 1)) * u_kernel[18]\n\t\t + texture2D(u_image, v_texCoord + pixel_size * vec2(2, 1)) * u_kernel[19]\n\n\t\t + texture2D(u_image, v_texCoord + pixel_size * vec2(-2, 2)) * u_kernel[20]\n\t\t + texture2D(u_image, v_texCoord + pixel_size * vec2(-1, 2)) * u_kernel[21]\n\t\t + texture2D(u_image, v_texCoord + pixel_size * vec2(0, 2)) * u_kernel[22]\n\t\t + texture2D(u_image, v_texCoord + pixel_size * vec2(1, 2)) * u_kernel[23]\n\t\t + texture2D(u_image, v_texCoord + pixel_size * vec2(2, 2)) * u_kernel[24];\n\n\t/* Kernel filter mask */\n  vec3 rgb_pix = mix(center, (colorSum.rgb / u_kernelWeight), u_masking);\n\t\n\t/**\n\t * RGB to saturation/value conversion, in order to maintains hue constant \n\t * sv_pixel = (saturation, value)\n\t */\n  float _max = max(rgb_pix.r, max(rgb_pix.g, rgb_pix.b));\n  float _min = min(rgb_pix.r, min(rgb_pix.g, rgb_pix.b));\n  vec2 sv_pixel = vec2(1.0 - _min / _max, _max);\n\n  sv_pixel.y = clamp(texture2D(u_lut, vec2(sv_pixel.y, 0.0)).a, 0.0, 1.0);\n\n\t/* Add saturation */\n  if (u_saturation != 0.0) {\n    sv_pixel.x *= (1.0 + u_saturation);\n  }\n\n  sv_pixel.x = clamp(sv_pixel.x, 0.0, 1.0);\n\n\t/* Brightness */\n  if (u_brightness != 0.0) {\n    sv_pixel.y = pow(sv_pixel.y, 1.0 - u_brightness * 0.6);\n  }\n\n\t/* HDR 'like' filter */\n  if (u_hdr != 0.0) {\n    sv_pixel.y = mix(sv_pixel.y, clamp(1.0 - pow(1.0 - pow(sv_pixel.y, 0.3), 0.42), 0.0, 1.0), u_hdr);\n  }\n\n  sv_pixel = clamp(sv_pixel, 0.0, 1.0);\n\t/* Return to RGB */\n  if (sv_pixel.x > 0.0) {\n    float k = -sv_pixel.x / (1.0 - _min / _max);\n    rgb_pix = (_max - rgb_pix) * k + _max;\n    rgb_pix *= sv_pixel.y / _max;\n  } else {\n    rgb_pix.r = rgb_pix.g = rgb_pix.b = sv_pixel.y;\n  }\n\n\t/* Dehaze */\n  if (u_dehaze != 0.0) {\n    float t = 1.0 / 25.0;\n    vec4 center = texture2D(u_image, v_texCoord);\n    vec2 pixel_size = vec2(1.0, 1.0) / u_textureSize;\n    float dark = 1.0;\n    const int radius = 1;\n    for (int ii = -radius; ii <= radius; ii++) {\n      for (int jj = -radius; jj <= radius; jj++) {\n        vec4 pix = texture2D(u_image, v_texCoord + pixel_size * vec2(ii, jj));\n        float _min = min(pix.r, min(pix.g, pix.b));\n        if (dark > _min) {\n          dark = _min;\n        }\n      }\n    }\n    float darkPix = min(center.r, min(center.g, center.b));\n    float diff = abs(darkPix - dark);\n    float mask = pow(diff, 3.0);\n    dark = mix(darkPix, dark, mask);\n    float mm = max(1.0 - dark, 0.2);\n    rgb_pix = mix(rgb_pix, ((rgb_pix - u_atmosferic_light) / mm + u_atmosferic_light), u_dehaze);\n  }\n\n\t/* Exposure */\n  rgb_pix += u_exposure;\n  rgb_pix = clamp(rgb_pix, 0.0, 1.0);\n\n\t/* Contrast */\n  float contrast = u_contrast + 1.0;\n  rgb_pix = contrast * (rgb_pix - 0.5) + 0.5;\n\t\n\t/* Apply tint filter */\n  rgb_pix *= u_temptint[0];\n  float mono = dot(rgb_pix, vec3(0.2126, 0.7152, 0.0722));\n  rgb_pix += mix(u_temptint[2], u_temptint[1], mono);\n\n\t/* Black&White filter */\n  if (u_bAndW != 0.0) {\n    rgb_pix = mix(rgb_pix, vec3(mono, mono, mono), u_bAndW);\n  }\n\n  gl_FragColor = vec4(rgb_pix, 1.0);\n\n}\n"},186:(t,i,e)=>{e.d(i,{Z:()=>r});const r="attribute vec2 a_position;\nattribute vec2 a_texCoord;\nuniform vec2 u_resolution;\nvarying vec2 v_texCoord;\nvoid main() {\n  vec2 dist = a_position / u_resolution;\n  gl_Position = vec4((dist * 2.0 - 1.0) * vec2(1, -1), 0, 1);\n  v_texCoord = a_texCoord;\n}"}},i={};function e(r){if(i[r])return i[r].exports;var n=i[r]={exports:{}};return t[r](n,n.exports,e),n.exports}e.d=(t,i)=>{for(var r in i)e.o(i,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:i[r]})},e.o=(t,i)=>Object.prototype.hasOwnProperty.call(t,i),e.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var r={};(()=>{e.r(r),e.d(r,{RextEditor:()=>_});var t=function(t,i,e){return t<i?i:t>e?e:t},i=function(t,i,e,r,n,o,s,a){void 0===n&&(n=0),void 0===o&&(o=.33),void 0===s&&(s=.66),void 0===a&&(a=1);var u,l,h,_,g,p,m,c,x,f,d,v,b,k,T,A,E,R=Math.pow(n,2),L=Math.pow(o,2),D=Math.pow(s,2),z=Math.pow(a,2),w=function(t){for(var i=t.length,e=0;e<i;e++)t[e]=Math.round(1e3*t[e])/1e3;return t}((p=(h=[n,o,s,a])[2]-h[3],g=(u=[R*n,L*o,D*s,z*a])[0]*((l=[R,L,D,z])[1]*p-h[1]*(c=l[2]-l[3])+(f=l[2]*h[3]-h[2]*l[3]))-l[0]*(u[1]*p-h[1]*(m=u[2]-u[3])+(d=u[2]*h[3]-h[2]*u[3]))+h[0]*(u[1]*c-l[1]*m+(v=u[2]*l[3]-l[2]*u[3]))-(u[1]*f-l[1]*d+h[1]*v),[((_=[t,i,e,r])[0]*(l[1]*p-h[1]*c+f)-l[0]*(_[1]*p-h[1]*(x=_[2]-_[3])+(b=_[2]*h[3]-h[2]*_[3]))+h[0]*(_[1]*c-l[1]*x+(k=_[2]*l[3]-l[2]*_[3]))-(_[1]*f-l[1]*b+h[1]*k))/g,(u[0]*(_[1]*p-h[1]*x+b)-_[0]*(u[1]*p-h[1]*m+d)+h[0]*(u[1]*x-_[1]*m+(T=u[2]*_[3]-_[2]*u[3]))-(u[1]*b-_[1]*d+h[1]*T))/g,(u[0]*(l[1]*x-_[1]*c+(A=l[2]*_[3]-_[2]*l[3]))-l[0]*(u[1]*x-_[1]*m+T)+_[0]*(u[1]*c-l[1]*m+v)-(u[1]*A-l[1]*T+_[1]*v))/g,(u[0]*(l[1]*(E=h[2]*_[3]-_[2]*h[3])-h[1]*A+_[1]*f)-l[0]*(u[1]*E-h[1]*T+_[1]*d)+h[0]*(u[1]*A-l[1]*T+_[1]*v)-_[0]*(u[1]*f-l[1]*d+h[1]*v))/g]));return function(t){var i=w[3],e=t;return i+=w[2]*e,e*=t,i+=w[1]*e,e*=t,i+w[0]*e}},n={hdr:0,exposure:0,temperature:0,tint:0,brightness:0,saturation:0,contrast:0,sharpen:0,masking:0,sharpen_radius:0,radiance:0,highlights:0,shadows:0,whites:0,blacks:0,dehaze:0,bAndW:0,atmosferic_light:0,lightFill:0,lightColor:0,lightSat:1,darkFill:0,darkColor:0,darkSat:1},o=function(i){var e,r,n,o,s,a;return r=(e=i.z*i.y)*(1-Math.abs(i.x/60%2-1)),n=i.z-e,i.x<180?i.x<60?(o=i.z,s=r+n,a=n):i.x<120?(o=r+n,s=i.z,a=n):(o=n,s=i.z,a=r+n):i.x<240?(o=n,s=r+n,a=i.z):i.x<300?(o=r+n,s=n,a=e+n):(o=e+n,s=n,a=r+n),{x:o=t(o,0,1),y:s=t(s,0,1),z:a=t(a,0,1)}},s=function(t){return[t.x,t.y,t.z]},a=e(554).Z,u=e(186).Z;void 0===window||window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame;var l=null,h=function(){function t(){}return t.prototype.log=function(t){console.log(t)},t.prototype.warn=function(t){console.warn(t)},t.prototype.error=function(t){console.error(t)},t}(),_=function(){function t(t,i){var e;this.params=(e=n,JSON.parse(JSON.stringify(e))),this.gl=null,this.program=null,this.pointers={positionLocation:null,positionBuffer:null,texcoordLocation:null,texcoordBuffer:null,resolutionLocation:null,textureSizeLocation:null,kernelLocation:null,kernelWeightLocation:null,u_exposure:null,u_brightness:null,u_contrast:null,u_saturation:null,u_masking:null,u_dehaze:null,u_atmosferic_light:null,u_temptint:null,u_bAndW:null,u_hdr:null,u_lut:null,u_image:null},this.WIDTH=0,this.HEIGHT=0,this.log=new h,this.config={resolutionLimit:1e6,editionResolutionLimit:1e6},this.uniforms={kernel:[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0],temptint:[1,1,1]},this.LIGHT_MATCH=function(){for(var t=[],i=0;i<256;i++)t[i]=i;return t}(),console.log("Constructor called"),t&&this.setCanvas(t),i&&(this.config=i)}return t.prototype.setCanvas=function(t){this.gl=t.getContext("webgl")||t.getContext("experimental-webgl")},t.prototype.updateParam=function(t,i){Object.keys(this.params).includes(t)?(this.params[t]=i,this.update()):this.log.error("Param "+t+" does not exists")},t.prototype.load=function(t){var i=this;(l=new Image).src=t,l.onload=function(){if(l.width*l.height>i.config.resolutionLimit){var t=l.height/l.width;l.height=Math.floor(Math.sqrt(t*i.config.resolutionLimit)),l.width=Math.floor(l.height/t)}};var e=new Image;e.onerror=function(){i.log.error("Error al cargar la imagen.")},e.onload=function(){try{var t=document.createElement("canvas");if(e.height*e.width>i.config.editionResolutionLimit){var r=Math.sqrt(i.config.editionResolutionLimit*e.height/e.width),n=e.width/e.height*r;t.width=n,t.height=r}else t.width=e.width,t.height=e.height;var o=t.getContext("2d");o.imageSmoothingEnabled=!0,o.drawImage(e,0,0,t.width,t.height);var s=new Image;s.src=t.toDataURL("image/png"),s.onload=function(){i.render(s)}}catch(t){i.log.error(t)}},e.src=t},t.prototype.setLog=function(t){this.log=t},t.prototype.updateKernel=function(){var t=-this.params.sharpen,i=this.params.sharpen_radius,e=this.params.radiance,r=this.params.hdr;0!=e&&(t-=.5*e,i+=.5*e),0!=r&&(t-=.5*r,i+=.5*r);var n=t*Math.exp(-Math.pow(1/i,2)),o=t*Math.exp(-Math.pow(1.41/i,2)),s=t*Math.exp(-Math.pow(2/i,2)),a=t*Math.exp(-Math.pow(2.24/i,2)),u=t*Math.exp(-Math.pow(2.83/i,2)),l=1;t<0&&(l+=4*Math.abs(u)+8*Math.abs(a)+4*Math.abs(s)+4*Math.abs(o)+4*Math.abs(n)),this.uniforms.kernel=[u,a,s,a,u,a,o,n,o,a,s,n,l,n,s,a,o,n,o,a,u,a,s,a,u]},t.prototype.updateTemptint=function(){var t,i,e,r=this.params.temperature,n=this.params.tint;if(r<0){t=1;var o=TEMP_DATA[Math.floor(100*(r+1))];i=o[0],e=o[1]}else t=.0438785/Math.pow(r+.150127,1.23675)+.543991,i=.0305003/Math.pow(r+.163976,1.23965)+.69136,e=1;-1==n&&(n=-.99);var s,a=1/(.2126*(s={x:t,y:i+=n,z:e}).x+.7152*s.y+.0722*s.z);this.uniforms.temptint=[t*a,i*a,e*a]},t.prototype.generateLightningfunction=function(){var t=this.params.blacks,e=this.params.shadows,r=this.params.highlights,n=this.params.whites,o=this.params.radiance,s=i(t,e+.33,r+.66,n+1,0,.33,.66,1);if(0!=o)var a=i(0,.33-.11*o,.66+.11*o,1,0,.33,.66,1);for(var u=0;u<256;u++){var l=u/256;l>1&&(l=1),l<0&&(l=0),l>1&&(l=1),l<0&&(l=0),a&&(l=a(l)),(l=s(l))>1&&(l=1),l<0&&(l=0),this.LIGHT_MATCH[u]=255*l}},t.prototype.kernelNormalization=function(t){return t.reduce((function(t,i){return t+i}))},t.prototype.render=function(t,i){var e=g(this.gl,this.gl.VERTEX_SHADER,u),r=g(this.gl,this.gl.FRAGMENT_SHADER,a);try{this.program=function(t,i,e){var r=t.createProgram();if(t.attachShader(r,i),t.attachShader(r,e),t.linkProgram(r),t.getProgramParameter(r,t.LINK_STATUS))return r;console.log(t.getProgramInfoLog(r)),t.deleteProgram(r)}(this.gl,e,r)}catch(t){return this.log.error(t)}this.pointers.positionLocation=this.gl.getAttribLocation(this.program,"a_position"),this.pointers.texcoordLocation=this.gl.getAttribLocation(this.program,"a_texCoord"),this.pointers.positionBuffer=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.pointers.positionBuffer),this.WIDTH=t.width,this.HEIGHT=t.height,this.gl.canvas.width=this.WIDTH,this.gl.canvas.height=this.HEIGHT,console.log("[IMAGE] width = "+this.WIDTH+", height = "+this.HEIGHT),this.setRectangle(0,0,this.WIDTH,this.HEIGHT),this.pointers.texcoordBuffer=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.pointers.texcoordBuffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array([0,0,1,0,0,1,0,1,1,0,1,1]),this.gl.STATIC_DRAW),this.gl.activeTexture(this.gl.TEXTURE0),p(this.gl);try{this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,this.gl.RGBA,this.gl.UNSIGNED_BYTE,t)}catch(t){return this.log.error(t)}this.pointers.u_image=this.gl.getUniformLocation(this.program,"u_image"),this.pointers.resolutionLocation=this.gl.getUniformLocation(this.program,"u_resolution"),this.pointers.textureSizeLocation=this.gl.getUniformLocation(this.program,"u_textureSize"),this.pointers.kernelLocation=this.gl.getUniformLocation(this.program,"u_kernel[0]"),this.pointers.kernelWeightLocation=this.gl.getUniformLocation(this.program,"u_kernelWeight"),this.pointers.u_exposure=this.gl.getUniformLocation(this.program,"u_exposure"),this.pointers.u_brightness=this.gl.getUniformLocation(this.program,"u_brightness"),this.pointers.u_contrast=this.gl.getUniformLocation(this.program,"u_contrast"),this.pointers.u_saturation=this.gl.getUniformLocation(this.program,"u_saturation"),this.pointers.u_masking=this.gl.getUniformLocation(this.program,"u_masking"),this.pointers.u_dehaze=this.gl.getUniformLocation(this.program,"u_dehaze"),this.pointers.u_atmosferic_light=this.gl.getUniformLocation(this.program,"u_atmosferic_light"),this.pointers.u_temptint=this.gl.getUniformLocation(this.program,"u_temptint[0]"),this.pointers.u_bAndW=this.gl.getUniformLocation(this.program,"u_bAndW"),this.pointers.u_hdr=this.gl.getUniformLocation(this.program,"u_hdr"),this.pointers.u_lut=this.gl.getUniformLocation(this.program,"u_lut"),this.gl.activeTexture(this.gl.TEXTURE1),p(this.gl),this.gl.viewport(0,0,this.WIDTH,this.HEIGHT),this.gl.clearColor(0,0,0,0),this.gl.clear(this.gl.COLOR_BUFFER_BIT),i||this.update()},t.prototype.update=function(){this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.ALPHA,256,1,0,this.gl.ALPHA,this.gl.UNSIGNED_BYTE,new Uint8Array(this.LIGHT_MATCH)),this.gl.useProgram(this.program),this.gl.enableVertexAttribArray(this.pointers.positionLocation),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.pointers.positionBuffer),this.gl.vertexAttribPointer(this.pointers.positionLocation,2,this.gl.FLOAT,!1,0,0),this.gl.enableVertexAttribArray(this.pointers.texcoordLocation),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.pointers.texcoordBuffer),this.gl.vertexAttribPointer(this.pointers.texcoordLocation,2,this.gl.FLOAT,!1,0,0),this.gl.uniform2f(this.pointers.resolutionLocation,this.WIDTH,this.HEIGHT),this.gl.uniform2f(this.pointers.textureSizeLocation,this.WIDTH,this.HEIGHT),this.gl.uniform1f(this.pointers.u_brightness,this.params.brightness),this.gl.uniform1f(this.pointers.u_exposure,this.params.exposure),this.gl.uniform1f(this.pointers.u_contrast,this.params.contrast),this.gl.uniform1f(this.pointers.u_saturation,this.params.saturation),this.gl.uniform1f(this.pointers.u_masking,this.params.masking),this.gl.uniform1f(this.pointers.u_dehaze,this.params.dehaze),this.gl.uniform1f(this.pointers.u_atmosferic_light,this.params.atmosferic_light),this.gl.uniform3fv(this.pointers.u_temptint,this.uniforms.temptint.concat(s(o({x:360*this.params.lightColor,y:this.params.lightSat,z:this.params.lightFill}))).concat(s(o({x:360*this.params.darkColor,y:this.params.darkSat,z:this.params.darkFill})))),this.gl.uniform1f(this.pointers.u_bAndW,this.params.bAndW),this.gl.uniform1f(this.pointers.u_hdr,this.params.hdr),this.gl.uniform1i(this.pointers.u_image,0),this.gl.uniform1i(this.pointers.u_lut,1),this.gl.uniform1fv(this.pointers.kernelLocation,this.uniforms.kernel),this.gl.uniform1f(this.pointers.kernelWeightLocation,this.kernelNormalization(this.uniforms.kernel)),this.gl.drawArrays(this.gl.TRIANGLES,0,6)},t.prototype.setRectangle=function(t,i,e,r){var n=t,o=t+e,s=i,a=i+r;this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array([n,s,o,s,n,a,n,a,o,s,o,a]),this.gl.STATIC_DRAW)},t}();function g(t,i,e){var r=t.createShader(i);if(t.shaderSource(r,e),t.compileShader(r),t.getShaderParameter(r,t.COMPILE_STATUS))return r;console.log(t.getShaderInfoLog(r)),t.deleteShader(r)}function p(t){var i=t.createTexture();return t.bindTexture(t.TEXTURE_2D,i),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),i}})(),RextEditor=r})();